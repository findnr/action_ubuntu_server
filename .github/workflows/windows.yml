name: windown-latest
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cygwin/cygwin-install-action@master
    - name: install sougou wubi
      run: |
        $url = "https://api.github.com/repos/${{ github.repository }}/releases/latest"
        $release = Invoke-RestMethod -Uri $url -Headers @{"Authorization"="Bearer ${{ secrets.GITHUB_TOKEN }}"} 
        $downloadUrl = $release.assets | Where-Object { $_.name -eq "sougouwubi.exe" } | Select-Object -ExpandProperty browser_download_url
        Invoke-WebRequest -Uri $downloadUrl -OutFile sougouwubi.exe
        # Start-Process -FilePath "D:\a\actions_os\actions_os\sougouwubi.exe" -ArgumentList "/S" -Wait -NoNewWindow
    - name: install sougou pinyin
      run: | 
        $url = "https://api.github.com/repos/${{ github.repository }}/releases/latest"
        $release = Invoke-RestMethod -Uri $url -Headers @{"Authorization"="Bearer ${{ secrets.GITHUB_TOKEN }}"} 
        $downloadUrl = $release.assets | Where-Object { $_.name -eq "sougoupinyin.exe" } | Select-Object -ExpandProperty browser_download_url
        Invoke-WebRequest -Uri $downloadUrl -OutFile "sougoupinyin.exe"
        # Start-Process -FilePath "D:\a\actions_os\actions_os\sougoupinyin.exe" -ArgumentList "/S" -Wait -NoNewWindow
       
    - name: setting info qaz,123456
      env:
        ZEROTIER_ID: ${{ secrets.ZEROTIER_ID }}
        WX_PUSH_APP_TOKEN: ${{ secrets.WX_PUSH_APP_TOKEN }}
        WX_UID: ${{ secrets.WX_UID }}
      run: |
         $env:USERNAME
         Write-Host "downloading ZeroTier msi progra..."
         $installerPath = "$env:TEMP\ZeroTierInstaller.msi"
         Invoke-WebRequest -Uri "https://download.zerotier.com/dist/ZeroTier%20One.msi" -OutFile $installerPath
         Write-Host "install working ZeroTier..."
         Start-Process -FilePath "msiexec.exe" -ArgumentList "/i $installerPath /qn /norestart" -Wait
         cd 'C:\Program Files (x86)\ZeroTier\One\'
         ./zerotier_desktop_ui.exe
         Start-Sleep -Seconds 60
         ./zerotier-cli join "${env:ZEROTIER_ID}"
         Start-Sleep -Seconds 10
         ./zerotier-cli info
         ipconfig
         $currentUsername = $env:USERNAME
         $defaultPassword = ConvertTo-SecureString "qaz,123456" -AsPlainText -Force
         Set-LocalUser -Name $currentUsername -Password $defaultPassword
         $networkAdapter = Get-NetIPAddress -InterfaceAlias "*One*" -AddressFamily IPv4
         $ip=$networkAdapter.IPAddress
         $response=Invoke-RestMethod -Uri "https://wxpusher.zjiecode.com/api/send/message/?appToken=${env:WX_PUSH_APP_TOKEN}&content=win:$ip&uid=${env:WX_UID}&url=http%3a%2f%2fwxpusher.zjiecode.com" -Method Get
         Write-Output $response
         Start-Sleep -Seconds 21300
    - name: delete network node
      env:
        ZEROTIER_ID: ${{ secrets.ZEROTIER_ID }}
        ZEROTIER_TOKEN: ${{ secrets.ZEROTIER_TOKEN }}
      run: |
        $response = Invoke-RestMethod -Uri "https://api.zerotier.com/api/v1/network/${env:ZEROTIER_ID}/member" -Headers @{"Authorization" = "token ${env:ZEROTIER_TOKEN}"} -Method Get -ContentType "application/json"
        $networkAdapter = Get-NetIPAddress -InterfaceAlias "*One*" -AddressFamily IPv4
        foreach ($item in $response) {
            if ($item.config.ipAssignments -eq $networkAdapter.IPAddress) {
                $tmp=$item.nodeId
                Invoke-RestMethod -Uri "https://api.zerotier.com/api/v1/network/${env:ZEROTIER_ID}/member/$tmp" -Headers @{"Authorization" = "token ${env:ZEROTIER_TOKEN}"} -Method Delete
                Write-Output $item.nodeId
            } else {
                Write-Output "Strings are not equal"
            }
        }
